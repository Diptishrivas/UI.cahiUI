{
  "name": "basic-button",
  "type": "registry:block",
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "content": "import React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport clsx from \"clsx\";\r\n\r\n// 1. Define variants using cva\r\nconst buttonVariants = cva(\r\n  \"px-8 py-3 cursor-pointer text-white font-bold rounded-lg shadow-md transition transform duration-300 hover:-translate-y-1 hover:scale-110 hover:shadow-xl\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-gray-600\",\r\n        destructive: \"bg-red-800\",\r\n        primary: \"bg-teal-600\",\r\n      },\r\n      size: {\r\n        default: \"h-12\",\r\n        md: \"h-24\",\r\n        lg: \"h-53\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\n// 2. Define props type using VariantProps + button props\r\ntype AllButtonsProps = React.ButtonHTMLAttributes<HTMLButtonElement> &\r\n  VariantProps<typeof buttonVariants>;\r\n\r\n// 3. Create a reusable button\r\nexport default function AllButtons({\r\n  variant,\r\n  size,\r\n  className,\r\n  ...props\r\n}: AllButtonsProps) {\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={twMerge(clsx(buttonVariants({ variant, size }), className))}\r\n    />\r\n  );\r\n}\r\n",
      "path": "ui/buttons/basicButton.tsx",
      "target": "components/ui/buttons/basicButton.tsx"
    }
  ]
}